// Generated by CoffeeScript 1.6.3
var are, chai, deepEqual, equal, expect, l, likeAB, likeBA, notEqual, ok, _B;

_B = require('uberscore');

l = new _B.Logger('spec/helpers');

chai = require('chai');

expect = chai.expect;

are = function(name) {
  return function(a, b) {
    var isEq, path;
    isEq = _B[name](a, b, {
      path: (path = []),
      allProps: true,
      exclude: ['inspect']
    });
    if (!isEq) {
      l.warn("Discrepancy _B." + name + " at path", path, '\n', _B.getp(a, path), '\n', _B.getp(b, path));
    }
    return expect(isEq).to.be["true"];
  };
};

deepEqual = are('isEqual');

likeAB = are('isLike');

likeBA = function(a, b) {
  return likeAB(b, a);
};

ok = function(a) {
  return expect(a).to.be["true"];
};

equal = function(a, b) {
  return expect(a, b).to.be.equal;
};

notEqual = function(a, b) {
  return expect(a, b).to.not.be.equal;
};

module.exports = {
  deepEqual: deepEqual,
  likeAB: likeAB,
  likeBA: likeBA,
  ok: ok,
  equal: equal,
  notEqual: notEqual,
  notEqual: notEqual
};
